// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PS.Persistence.DataContext;

#nullable disable

namespace PS.Persistence.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20241129005552_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PS.Domain.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TaxRegime")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("PS.Domain.Entities.TaxBracket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("TaxBrackets");
                });

            modelBuilder.Entity("PS.Domain.Entities.TaxBracketLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("LowerLimit")
                        .HasPrecision(31, 12)
                        .HasColumnType("decimal(31,12)");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<decimal>("Rate")
                        .HasPrecision(31, 12)
                        .HasColumnType("decimal(31,12)");

                    b.Property<int>("TaxBracketId")
                        .HasColumnType("int");

                    b.Property<decimal>("UpperLimit")
                        .HasPrecision(31, 12)
                        .HasColumnType("decimal(31,12)");

                    b.HasKey("Id");

                    b.HasIndex("TaxBracketId");

                    b.ToTable("TaxBracketLines");
                });

            modelBuilder.Entity("PS.Domain.Entities.TaxCalculation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CalculatedTax")
                        .HasPrecision(31, 12)
                        .HasColumnType("decimal(31,12)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<decimal>("Income")
                        .HasPrecision(31, 12)
                        .HasColumnType("decimal(31,12)");

                    b.Property<decimal>("NetPay")
                        .HasPrecision(31, 12)
                        .HasColumnType("decimal(31,12)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("TaxCalculations");
                });

            modelBuilder.Entity("PS.Domain.Entities.TaxRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<decimal>("Rate")
                        .HasPrecision(31, 12)
                        .HasColumnType("decimal(31,12)");

                    b.Property<string>("RateCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("TaxRates");
                });

            modelBuilder.Entity("PS.Domain.Entities.TaxBracket", b =>
                {
                    b.HasOne("PS.Domain.Entities.Country", "Country")
                        .WithMany("TaxBrackets")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("PS.Domain.Entities.TaxBracketLine", b =>
                {
                    b.HasOne("PS.Domain.Entities.TaxBracket", "TaxBracket")
                        .WithMany("TaxBracketLines")
                        .HasForeignKey("TaxBracketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaxBracket");
                });

            modelBuilder.Entity("PS.Domain.Entities.TaxCalculation", b =>
                {
                    b.HasOne("PS.Domain.Entities.Country", "Country")
                        .WithMany("TaxCalculations")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("PS.Domain.Entities.TaxRate", b =>
                {
                    b.HasOne("PS.Domain.Entities.Country", "Country")
                        .WithMany("TaxRates")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("PS.Domain.Entities.Country", b =>
                {
                    b.Navigation("TaxBrackets");

                    b.Navigation("TaxCalculations");

                    b.Navigation("TaxRates");
                });

            modelBuilder.Entity("PS.Domain.Entities.TaxBracket", b =>
                {
                    b.Navigation("TaxBracketLines");
                });
#pragma warning restore 612, 618
        }
    }
}
